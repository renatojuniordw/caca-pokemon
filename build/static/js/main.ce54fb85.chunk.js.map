{"version":3,"sources":["components/card-img/index.jsx","components/alert/index.jsx","components/detail-pokemon/index.jsx","services/api.ts","services/pokemon-service.js","pages/search-pokemon/index.jsx","containers/App.jsx","index.js"],"names":["CardImg","url","name","Card","body","className","Figure","Image","width","height","alt","src","Caption","Alert","Body","DetailPokemon","sprites","useState","namePokemon","setNamePokemon","spritesPokemon","setSpritesPokemon","useEffect","Row","toUpperCase","Col","back_default","back_shiny","front_default","front_shiny","axios","create","baseURL","getPokemonById","idPokemon","API","get","SearchPokemon","props","_isMounted","btnGetPokemonById","event","a","preventDefault","id","state","setIsValidSearch","then","result","data","catch","changeSetValueId","setState","target","value","isConsulted","isValidSearch","this","Form","Label","htmlFor","InputGroup","Control","data-testid","type","placeholder","onChange","Append","Button","variant","onClick","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ce54fb85.chunk.js","sourcesContent":["import React from 'react';\nimport { Card, Figure } from 'react-bootstrap';\n\nexport default function CardImg({ url, name }) {\n    return (name && url) ? (\n        <Card body className=\"text-center\">\n            <Figure>\n                <Figure.Image\n                    width={500}\n                    height={500}\n                    alt={name}\n                    src={url}\n                />\n                <Figure.Caption>\n                    {name}\n                </Figure.Caption>\n            </Figure>\n        </Card>\n    ) : (<></>);\n}\n","import React from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport './styles.css';\n\nconst Alert = () => (\n    <div className=\"text-center\">\n        <Card>\n            <Card.Body>Nenhum Pokémon corresponde à sua pesquisa!</Card.Body>\n        </Card>\n    </div>\n);\n\nexport default Alert;\n","import React, { useState, useEffect } from 'react';\nimport { Row, Col } from 'react-bootstrap';\n\nimport CardImg from '../card-img';\nimport Alert from '../alert';\n\nimport './styles.css';\n\nconst DetailPokemon = ({ name, sprites }) => {\n\n    const [namePokemon, setNamePokemon] = useState('');\n    const [spritesPokemon, setSpritesPokemon] = useState({});\n\n    useEffect(() => {\n        setNamePokemon(name);\n        setSpritesPokemon(sprites);\n    }, [name, sprites]);\n\n    return name ? (\n        <section className=\"text-center section-card\">\n\n            <Row>\n                <h5>Você encontrou o Pokémon:</h5>\n                <h2 className=\"title_pokemon\">\n                    {namePokemon.toUpperCase()}\n                </h2>\n            </Row>\n            \n            <Row className=\"row-card-img\">\n                <Col>\n                    <CardImg\n                        name={namePokemon}\n                        url={spritesPokemon.back_default}\n                    />\n                </Col>\n                <Col>\n                    <CardImg\n                        name={namePokemon}\n                        url={spritesPokemon.back_shiny}\n                    />\n                </Col>\n                <Col>\n                    <CardImg\n                        name={namePokemon}\n                        url={spritesPokemon.front_default}\n                    />\n                </Col>\n                <Col>\n                    <CardImg\n                        name={namePokemon}\n                        url={spritesPokemon.front_shiny}\n                    />\n                </Col>\n            </Row>\n\n        </section >\n    ) : (\n        <>\n            <Alert />\n        </>\n    );\n};\n\nexport default DetailPokemon;\n","import axios from 'axios';\n\nexport default axios.create({\n    baseURL: 'https://pokeapi.co/api/v2',\n});\n","import API from './api.ts';\n\nconst getPokemonById = (idPokemon) => API.get(`/pokemon/${idPokemon}`);\n\nexport default getPokemonById;\n","import React from 'react';\nimport {\n    Form, Row, Button, InputGroup\n} from 'react-bootstrap/';\n\nimport DetailPokemon from '../../components/detail-pokemon';\nimport getPokemonById from '../../services/pokemon-service';\nimport Alert from '../../components/alert';\n\nimport { BsSearch } from \"react-icons/bs\";\n\nimport './style.css';\n\nclass SearchPokemon extends React.Component {\n\n    _isMounted = false;\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isValidSearch: false,\n            spritesPokemon: {},\n            namePokemon: '',\n            id: '',\n        };\n    }\n\n    componentDidMount() {\n        this._isMounted = true;\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n    btnGetPokemonById = async (event) => {\n        event.preventDefault();\n\n        this._isMounted = true;\n        const { id } = this.state;\n        this.setIsValidSearch(true);\n\n        if (!!id) {\n            await getPokemonById(id).then((result) => {\n                if (this._isMounted === true) {\n                    if (!!result && !!result.data) {\n\n                        const { name, sprites } = result.data;\n                        this.setNamePokemon(name);\n                        this.setSpritesPokemon(sprites);\n                    } else {\n                        this.setNamePokemon('');\n                        this.setSpritesPokemon({});\n                    }\n                }\n            }).catch(() => {\n                if (this._isMounted === true) {\n                    this.setNamePokemon(null);\n                    this.setSpritesPokemon({});\n                    this.setIsValidSearch(true);\n                }\n            });\n        } else {\n            if (this._isMounted === true) {\n                this.setNamePokemon(null);\n                this.setSpritesPokemon({});\n                this.setIsValidSearch(true);\n            }\n        }\n\n    };\n\n    changeSetValueId = (event) => {\n        this.setState({ id: event.target.value });\n    };\n\n    setNamePokemon = (namePokemon) => {\n        this.setState({ namePokemon });\n    };\n\n    setSpritesPokemon = (spritesPokemon) => {\n        this.setState({ spritesPokemon });\n    };\n\n    setIsValidSearch = (isConsulted) => {\n        this.setState({ isValidSearch: isConsulted });\n    };\n\n    render() {\n\n        const {\n            id,\n            namePokemon,\n            spritesPokemon,\n            isValidSearch\n        } = this.state;\n\n        return (\n            <article>\n                <header className=\"text-center\">\n                    <h1>Caça Pokémon</h1>\n                </header>\n\n                <section className=\"section-form\">\n                    <Form>\n                        <Row>\n\n                            <Form.Label\n                                htmlFor=\"label input pokémon\">\n                                Quer encontrar seu Pokémon favorito? Digita o número dele aqui abaixo.\n                                        </Form.Label>\n                            <InputGroup className=\"mb-3\">\n\n                                <Form.Control\n                                    data-testid=\"form-input\"\n                                    className=\"input_search\"\n                                    name=\"input_search\"\n                                    type=\"number\"\n                                    placeholder=\"Digite apenas números\"\n                                    value={id}\n                                    onChange={this.changeSetValueId}\n                                />\n\n                                <InputGroup.Append>\n                                    <Button\n                                        variant=\"danger\"\n                                        type=\"submit\"\n                                        onClick={this.btnGetPokemonById}\n                                    >\n                                        <BsSearch />\n                                    </Button>\n                                </InputGroup.Append>\n\n                            </InputGroup>\n\n                            {\n                                ((!!id && (id <= 0 || id > 898)) || (!id && isValidSearch)) ? (\n                                    <p className=\"p-alert\">\n                                        Você precisa digitar um número entre 1 e 898.\n                                    </p>\n                                ) : (<></>)\n                            }\n\n                        </Row>\n                    </Form>\n\n                </section >\n                {\n                    isValidSearch || (!!id && isValidSearch) ? (\n                        (!!namePokemon ? (\n                            <DetailPokemon\n                                name={namePokemon}\n                                sprites={spritesPokemon}\n                            />\n                        ) : (\n                            <Alert />\n                        ))\n                    ) : (\n                        <></>\n                    )\n                }\n\n            </article>\n        );\n    }\n\n}\n\nexport default SearchPokemon;\n","import React from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './style.css';\n\nimport SearchPokemon from '../pages/search-pokemon';\n\nconst App = () => (<main><SearchPokemon /></main>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './containers/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}